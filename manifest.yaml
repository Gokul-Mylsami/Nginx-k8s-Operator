# Service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-operator-sa
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-operator-cluster-role
rules:
- apiGroups: [""]
  resources: [ "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["nginx.gokul-mylsami.com",]
  resources: ["nginxroutes","nginxupstreams"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-operator-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: nginx-operator-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: nginx-operator-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf.template: |
      server {
          listen {{ .Spec.ServerPort }};
              {{- if .Spec.ServerName }}
              server_name {{ .Spec.ServerName }};
              {{- end }}

          {{- if .Spec.CustomDirectives }}
              {{- range .Spec.CustomDirectives }}
                  {{ . }}
              {{- end }}
          {{- end }}

          {{- if .Spec.TLSCertificate }}
              ssl_certificate /etc/nginx/ssl/{{.Spec.TLSCertificate.Name}}-{{.Spec.TLSCertificate.Namespace}}.crt;
              ssl_certificate_key /etc/nginx/ssl/{{.Spec.TLSCertificate.Name}}-{{.Spec.TLSCertificate.Namespace}}.key;
          {{- end }}

          {{- if .Spec.CustomLocations }}
              {{- range .Spec.CustomLocations }}
                  location {{ .Location }} {
                      {{ .Definition }}
                  }
              {{- end }}
          {{- end }}
      }
  main.conf.template: |
     server {
          listen {{ .Spec.ServerPort }};
          {{- if .Spec.ServerName }}
          server_name {{ .Spec.ServerName }};
          {{- end }}

          {{- if .Spec.CustomDirectives }}
              {{- range .Spec.CustomDirectives }}
                  {{ . }}
              {{- end }}
          {{- end }}

          {{- if .Spec.CustomLocations }}
              {{- range .Spec.CustomLocations }}
                  location {{ .Location }} {
                      {{ .Definition }}
                  }
              {{- end }}
          {{- end }}
      }
  upstream.conf.template: |
      upstream {{ .Spec.UpstreamName }} {
          {{- range .Spec.UpstreamServers }}
                  server {{ . }};
          {{- end }}
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-operator
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: nginx-operator-sa
      containers:
        - name: nginx
          image: gokulmylsami/operator:v3
          imagePullPolicy: Always
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          env:
            - name: ENV_TYPE
              value: PROD
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/operator/templates/
          ports:
            - containerPort: 80
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
---
apiVersion: nginx.gokul-mylsami.com/v1alpha1
kind: NginxRoutes
metadata:
  labels:
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
  name: nginxroutes-sample
spec:
  serverName: "example.com"
  serverPort: 443
  templateFile: "default.conf.template"
  tlsCertificate: 
    name: dotfile-secret
    namespace: default
  customLocations: 
    - location: "/"
      definition: | 
        return 200 'Hello, World!';
---
apiVersion: nginx.gokul-mylsami.com/v1alpha1
kind: NginxUpstream
metadata:
  labels:
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
  name: nginxupstream-sample
spec:
  upstreamName: "api-service"
  templateFile: "upstream.conf.template"
  upstreamServers:
    - "api-service.default.svc.cluster.local"
---
apiVersion: nginx.gokul-mylsami.com/v1alpha1
kind: NginxRoutes
metadata:
  labels:
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
  name: nginxroutes-sample1
spec:
  serverPort: 80
  serverName: "_"
  templateFile: "main.conf.template"
  customLocations: 
    - location: "/"
      definition: | 
        return 200 'Hello, World!';